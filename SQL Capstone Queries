Import the Donor_Data and Donation_Data as tables into your SQL server of choice.
PostgreSQL server was used for this project.

--Create Donation_data table
CREATE TABLE Donation_Data(id INT, first_name VARCHAR(50), last_name VARCHAR(50), 
email VARCHAR(50), gender VARCHAR(50), job_field VARCHAR(50), donation INT, 
state VARCHAR(50), shirt_size VARCHAR(50)

--Import data using INSERT INTO(col_1, col_2, ...) VALUES (val_1, val_2, ...)

--Create Donor_data table
CREATE TABLE Donation_Data(id INT, donation_frequency VARCHAR(50), university VARCHAR(50), 
car VARCHAR(50), second_language VARCHAR(50), favourite_colour VARCHAR(50), 
movie_genre VARCHAR(50))

--Import data using INSERT INTO(col_1, col_2, ...) VALUES (val_1, val_2, ...)

--The total donation received
SELECT SUM(donation) as total_Donation
FROM donation_data;

--Total donation received from male and female respective;y
SELECT gender, SUM(donation) AS total_Donations
FROM donation_data
GROUP BY gender;

--Number of times donation received from male and female and respective totals
SELECT gender, COUNT(gender) AS number_of_donations,SUM(donation) AS total_Donation
FROM donation_data
GROUP BY gender;

--How frequent donors donated and total donations received
SELECT SUM(t1.donation) AS total_donation, t2.donation_frequency
FROM donation_data AS t1
INNER JOIN donor_data AS t2
ON t1.id = t2.id
GROUP BY t2.donation_frequency
ORDER BY SUM(t1.donation);

--Total donation received from different professionals
SELECT job_field, COUNT(job_field) AS job_field_count, SUM(donation) AS total_Donations
FROM donation_data
GROUP BY job_field
ORDER BY SUM(donation) DESC;

--Number of times donors donated above $200 and the total of their donations
SELECT COUNT(donation) AS donation_count, SUM(donation) AS total_Donations
FROM donation_data
GROUP BY donation
HAVING donation > 200
ORDER BY SUM(donation) DESC; 

--Number of times donors donated below $200 and the total of their donations
SELECT donor_id, COUNT(donation) AS donation_count, SUM(donation) AS total_Donations
FROM donation_data
GROUP BY donation, donor_id
HAVING donation < 200
ORDER BY SUM(donation) DESC;

--Top 10 states with the highest donations
SELECT COUNT(donation) AS donation_count, SUM(donation) AS total_Donations, state
FROM donation_data
GROUP BY state
ORDER BY SUM(donation) DESC
LIMIT 10;

--Bottom 10 states with the least donations
SELECT COUNT(donation) AS donation_count, SUM(donation) AS total_Donations, state
FROM donation_data
GROUP BY state
ORDER BY SUM(donation)
LIMIT 10;

--Top 10 cars driven by the highest donors
SELECT t1.donor_id, COUNT(t1.donation) AS donation_count, MAX(t1.donation) AS max_Donations, t2.car
FROM donation_data AS t1
INNER JOIN donor_data AS t2
ON t1.donor_id = t2.donor_id
GROUP BY t1.donor_id, t2.car
ORDER BY MAX(donation) DESC
LIMIT 10;
